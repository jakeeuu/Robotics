# Obstacle Cost Shaping
# (http://wiki.ros.org/costmap_2d/hydro/inflation)
footprint: [[0.306, 0.29], [0.306, -0.29], [-0.306, -0.29], [-0.306, 0.29]] # The robot's footprint coordinates defining its shape for obstacle avoidance. See https://global.agilex.ai/products/scout-mini

map_type: costmap_2d  # Type of the map used for navigation (costmap_2d is a 2D occupancy grid).

# Obstacle Layer Parameters
obstacle_layer:
  enabled: true  # Enables obstacle detection from both the map and laser sensors.
  unknown_threshold: 15  # Threshold for the number of unknown cells allowed before considering a cell as unknown.
  mark_threshold: 0  # Threshold for the number of marked cells needed before marking a cell as an obstacle.
  combination_method: 1  # Method to combine multiple observations (1 means overwriting existing data).
  track_unknown_space: true  # Enables tracking unknown space, necessary to avoid planning paths through unknown areas. This is particularly important for SLAM where the map is largely unknown during exploration.
  obstacle_range: 2.5  # Maximum distance in meters for inserting obstacles into the costmap using sensor data.
  raytrace_range: 3.0  # Maximum distance in meters for raytracing obstacles from the map using sensor data.
  observation_sources: scan  # Specifies the sources of obstacle observations (e.g., laser scans).
  
  scan:  # Configuration for the 'scan' observation source.
    data_type: LaserScan  # Data type for the sensor data (LaserScan for laser sensors).
    topic: scan  # ROS topic from which to receive the scan data.
    marking: true  # Enables marking of obstacles in the costmap based on this sensor's data.
    clearing: true  # Enables clearing of obstacles from the costmap based on this sensor's data.
    min_obstacle_height: 0.25  # Minimum height of obstacles to be considered from the laser scan data.
    max_obstacle_height: 0.35  # Maximum height of obstacles to be considered from the laser scan data.

# Inflation Layer Parameters
# Creating an area around the obstacle with a cost function to avoid the robot moving too close.
inflation_layer:
  enabled: true  # Enables the inflation layer, which adds a safety buffer around obstacles.
  cost_scaling_factor: 5.0  # Exponential rate at which the obstacle cost drops off. Higher values mean a steeper drop-off.
  inflation_radius: 0.5  # Maximum distance from an obstacle at which costs are incurred for path planning.

# Static Layer Parameters
static_layer:
  enabled: true  # Enables the static layer, which includes static obstacles from the map.
